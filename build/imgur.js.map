{"version":3,"sources":["imgur.js"],"names":[],"mappings":"AAAA,AAAC,CAAA,UAAU,MAAM,EAAE,OAAO,EAAE;AAC1B,WAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC,GAC/H,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,6BAA6B,CAAC,EAAE,OAAO,CAAC,GAC7F,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;CACvC,CAAA,CAAC,IAAI,EAAE,UAAU,OAAO,EAAE;AAAE,gBAAY,CAAC;;AAExC,QAAI,KAAK,GAAG;AACR,eAAO,EAAE,uBAAuB;AAChC,mBAAW,EAAE,GAAG;AAChB,iBAAS,EAAE,EAAE;AACb,oBAAY,EAAE,sBAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAgB;gBAAd,IAAI,yDAAG,EAAE;;AAC1C,mBAAO,EAAE,MAAM,EAAN,MAAM,EAAE,IAAI,EAAJ,IAAI,EAAE,MAAM,EAAN,MAAM,EAAE,IAAI,EAAJ,IAAI,EAAE,CAAC;SACzC;AACD,cAAM,EAAE,EAAE;AACV,yBAAiB,EAAE,EAAE;KACxB,CAAC;;AAEF,QAAI,YAAY,GAAG,SAAf,YAAY,CAAY,OAAO,EAAE;AACjC,SAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,UAAA,MAAM,EAAI;AACnD,gBAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AAClB,sBAAM,IAAI,KAAK,CAAI,MAAM,wBAAqB,CAAC;aAClD;SACJ,CAAC,CAAC;;AAEH,YAAI,SAAS,kBAAgB,KAAK,CAAC,SAAS,AAAE,CAAC;;AAE/C,YAAG,KAAK,CAAC,MAAM,EAAE;AACb,qBAAS,eAAa,KAAK,CAAC,MAAM,AAAE,CAAC;SACxC;;AAED,eAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAI,OAAO,CAAC,MAAM,SAAI,OAAO,CAAC,IAAI,CAAG,CAC9D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAClB,GAAG,CAAC,eAAe,EAAE,SAAS,CAAC,CAC/B,GAAG,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAC5B,OAAO,EAAE,CAAC;KAClB,CAAC;;AAEF,QAAI,QAAQ,GAAG,SAAX,QAAQ,CAAY,OAAO,EAAE;AAC7B,eAAO,CAAC,YAAY,GAAG,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAClD,eAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAO,KAAK,CAAC,OAAO,SAAI,KAAK,CAAC,WAAW,AAAE,CAAC;;AAE3E,eAAO,OAAO,CAAC;KAClB,CAAA;;AAED,QAAI,aAAa,GAAG,QAAQ,CAAC;AACzB,YAAI,EAAE,OAAO;AACb,cAAM,EAAK,KAAK,CAAC,OAAO,SAAI,KAAK,CAAC,WAAW,AAAE;AAC/C,WAAG,EAAA,aAAC,IAAI,EAAE;AACN,gBAAM,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAK,IAAI,CAAC,IAAI,SAAI,IAAI,EAAI,KAAK,CAAC,CAAC;;AAE/E,mBAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACrC;KACJ,CAAC,CAAC;;AAEH,QAAI,aAAa,GAAG,QAAQ,CAAC;AACzB,YAAI,EAAE,OAAO;AACb,cAAM,EAAK,KAAK,CAAC,OAAO,SAAI,KAAK,CAAC,WAAW,AAAE;AAC/C,WAAG,EAAA,aAAC,IAAI,EAAE;AACN,gBAAM,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAK,IAAI,CAAC,IAAI,SAAI,IAAI,EAAI,KAAK,CAAC,CAAC;;AAE/E,mBAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACrC;KACJ,CAAC,CAAC;;AAEH,QAAI,cAAc,GAAG,QAAQ,CAAC;AAC1B,YAAI,EAAE,QAAQ;AACd,cAAM,EAAE,KAAK,CAAC,OAAO;AACrB,WAAG,EAAA,aAAC,YAAY,EAAE;AACd,gBAAM,OAAO,GAAG,YAAY,IAAI,OAAO,CAAC;AACxC,gBAAM,WAAW,GAAG,GAAG,GAAG,oBACL,OAAO,iBACX,KAAK,CAAC,SAAS,CACjC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;AAEV,gBAAM,IAAI,GAAM,IAAI,CAAC,IAAI,kBAAa,WAAW,AAAE,CAAC;AACpD,gBAAM,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;;AAE7D,mBAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACrC;AACD,eAAO,EAAA,iBAAC,YAAY,EAAE,YAAY,EAAE;AAChC,gBAAM,WAAW,GAAG,GAAG,GAAG,oBACL,YAAY,iBAChB,KAAK,CAAC,SAAS,qBACX,YAAY,EAC7B,0BAA0B,CAC7B,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;AAEZ,gBAAM,IAAI,GAAM,IAAI,CAAC,IAAI,cAAS,WAAW,AAAE,CAAC;AAChD,gBAAM,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;;AAE9D,mBAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACrC;KACJ,CAAC,CAAC;;AAEH,QAAI,cAAc,GAAG,QAAQ,CAAC;AAC1B,YAAI,EAAE,QAAQ;AACd,cAAM,EAAK,KAAK,CAAC,OAAO,SAAI,KAAK,CAAC,WAAW,AAAE;AAC/C,WAAG,EAAA,aAAC,OAAO,EAAwB;gBAAtB,IAAI,yDAAC,OAAO;gBAAE,IAAI,yDAAC,CAAC;;AAC7B,gBAAM,WAAW,GAAM,IAAI,CAAC,IAAI,SAAI,OAAO,SAAI,IAAI,SAAI,IAAI,AAAE,CAAC;AAC9D,gBAAM,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;;AAEpE,mBAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACrC;AACD,mBAAW,EAAA,uBAAG;AACV,gBAAM,WAAW,GAAM,IAAI,CAAC,IAAI,cAAW,CAAC;AAC5C,gBAAM,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;;AAEpE,mBAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACrC;KACJ,CAAC,CAAC;;AAEH,QAAM,WAAW,GAAG;AAChB,YAAI,EAAE,SAAS;AACf,cAAM,EAAK,KAAK,CAAC,OAAO,SAAI,KAAK,CAAC,WAAW,AAAE;KACpD,CAAC;;AAEA,aAAS,MAAM,GAAG;AAChB,YAAI,GAAG;YAAE,GAAG;YAAE,MAAM,GAAG,EAAE;YAAE,CAAC,CAAC;AAC7B,aAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACtC,eAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AACnB,iBAAK,GAAG,IAAI,GAAG,EAAE;AACf,oBAAI,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;AAC3B,0BAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;iBACxB,MAAM,EACN;aACF;SACF;AACD,eAAO,MAAM,CAAC;KACf;;AAED,QAAI,mBAAmB,GAAG,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,EAAE;AACvD,uCAA+B,EAAE,CAAC;AAClC,WAAG,EAAA,aAAC,IAAI,EAAE;AACN,gBAAM,IAAI,GAAM,IAAI,CAAC,IAAI,SAAI,IAAI,AAAE,CAAC;AACpC,gBAAM,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;;AAE7D,mBAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACrC;AACD,cAAM,EAAA,gBAAC,IAAI,EAAiD;gBAA/C,MAAM,yDAAG,IAAI,CAAC,+BAA+B;;AACtD,gBAAG,CAAC,IAAI,EAAE;AAAE,sBAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;aAAE;;AAExD,gBAAG,OAAO,MAAM,KAAK,QAAQ,EAAE;AAC3B,sBAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;aACpD;;AAED,gBAAM,IAAI,GAAM,IAAI,CAAC,IAAI,SAAI,IAAI,YAAS,CAAC;AAC3C,gBAAM,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,MAAM,EAAN,MAAM,EAAE,CAAC,CAAC;;AAE1E,mBAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACrC;AACD,mBAAW,EAAA,qBAAC,IAAI,EAAE,QAAQ,EAAE;AACxB,gBAAG,CAAC,IAAI,EAAE;AAAE,sBAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;aAAE;;AAExD,gBAAM,IAAI,GAAM,IAAI,CAAC,IAAI,SAAI,IAAI,cAAS,QAAQ,AAAE,CAAC;AACrD,gBAAM,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;;AAE9D,mBAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACrC;AACD,cAAM,EAAA,gBAAC,IAAI,EAAE;AACT,mBAAO,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SACvC;AACD,gBAAQ,EAAA,kBAAC,IAAI,EAAE;AACX,mBAAO,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SACzC;AACD,gBAAQ,EAAA,kBAAC,IAAI,EAAE,OAAO,EAAE;AACpB,gBAAG,CAAC,IAAI,EAAE;AAAE,sBAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;aAAE;;AAExD,gBAAG,OAAO,KAAK,SAAS,IAAI,OAAO,OAAO,AAAC,KAAK,SAAS,EAAE;AACvD,sBAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;aAClE;;AAED,gBAAM,QAAQ,GAAG,OAAO,GAAG,OAAO,GAAG,OAAO,CAAC;;AAE7C,gBAAM,IAAI,GAAM,QAAQ,SAAI,IAAI,cAAW,CAAC;AAC5C,gBAAM,OAAO,GAAI,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;;AAE/D,mBAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACrC;AACD,gBAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,EAAE;AACvC,eAAG,EAAA,aAAC,IAAI,EAAe;oBAAb,IAAI,yDAAC,MAAM;;AACjB,oBAAM,IAAI,GAAM,IAAI,CAAC,IAAI,SAAI,IAAI,kBAAa,IAAI,AAAE,CAAC;AACrD,oBAAM,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;;AAE7D,uBAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;aACrC;SACJ,CAAC,CAAC;KACN,CAAC,CAAC,CAAC;;AAEJ,QAAI,eAAe,GAAG,QAAQ,CAAC;AAC3B,YAAI,EAAE,SAAS;AACf,cAAM,EAAK,KAAK,CAAC,OAAO,SAAI,KAAK,CAAC,WAAW,AAAE;AAC/C,WAAG,EAAA,eAAsD;gBAArD,OAAO,yDAAC,KAAK;gBAAE,IAAI,yDAAC,OAAO;gBAAE,IAAI,yDAAC,CAAC;gBAAE,SAAS,yDAAC,IAAI;;AACnD,gBAAM,WAAW,GAAM,IAAI,CAAC,IAAI,SAAI,OAAO,SAAI,IAAI,SAAI,IAAI,mBAAc,SAAS,AAAE,CAAC;AACrF,gBAAM,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;;AAEpE,mBAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACrC;AACD,YAAI,EAAE,mBAAmB;KAC5B,CAAC,CAAC;;AAEH,QAAI,eAAe,GAAG,QAAQ,CAAC;AAC3B,YAAI,EAAE,SAAS;AACf,cAAM,EAAK,KAAK,CAAC,OAAO,SAAI,KAAK,CAAC,WAAW,AAAE;AAC/C,uCAA+B,EAAE,CAAC;AAClC,WAAG,EAAA,aAAC,SAAS,EAAE;AACX,gBAAG,CAAC,SAAS,EAAE;AAAE,sBAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;aAAE;;AAElE,gBAAM,IAAI,GAAM,IAAI,CAAC,IAAI,SAAI,SAAS,AAAE,CAAC;AACzC,gBAAM,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;;AAE7D,mBAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACrC;AACD,gBAAQ,EAAA,kBAAC,SAAS,EAAE;AAChB,gBAAG,CAAC,SAAS,EAAE;AAAE,sBAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;aAAE;;AAElE,gBAAM,IAAI,GAAM,IAAI,CAAC,IAAI,SAAI,SAAS,eAAY,CAAC;AACnD,gBAAM,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;;AAE9D,mBAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACrC;AACD,cAAM,EAAA,gBAAC,SAAS,EAAE;AACd,gBAAG,CAAC,SAAS,EAAE;AAAE,sBAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;aAAE;;AAElE,gBAAM,IAAI,GAAM,IAAI,CAAC,IAAI,SAAI,SAAS,aAAU,CAAC;AACjD,gBAAM,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;;AAE9D,mBAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACrC;AACD,cAAM,EAAA,gBAAC,SAAS,EAAiD;gBAA/C,MAAM,yDAAG,IAAI,CAAC,+BAA+B;;AAC3D,gBAAG,CAAC,SAAS,EAAE;AAAE,sBAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;aAAE;;AAElE,gBAAG,OAAO,MAAM,KAAK,QAAQ,EAAE;AAC3B,sBAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;aACpD;;AAED,gBAAM,IAAI,GAAM,IAAI,CAAC,IAAI,SAAI,SAAS,YAAS,CAAC;AAChD,gBAAM,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,MAAM,EAAN,MAAM,EAAE,CAAC,CAAC;;AAE1E,mBAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACrC;AACD,qBAAa,EAAA,uBAAC,SAAS,EAAE;AACrB,gBAAG,CAAC,SAAS,EAAE;AAAE,sBAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;aAAE;;AAElE,gBAAM,IAAI,GAAM,IAAI,CAAC,IAAI,SAAI,SAAS,AAAE,CAAC;AACzC,gBAAM,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;;AAE7D,mBAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACrC;AACD,qBAAa,EAAA,uBAAC,MAAM,EAAE;AAClB,aAAC,UAAU,EAAE,SAAS,CAAC,CAAC,OAAO,CAAC,UAAA,MAAM,EAAI;AACtC,uBAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAC7B,oBAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;AACjB,0BAAM,IAAI,KAAK,CAAI,MAAM,wBAAqB,CAAC;iBAClD;aACJ,CAAC,CAAC;;AAEH,gBAAM,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AAC3E,mBAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACrC;AACD,mBAAW,EAAA,qBAAC,MAAM,EAAE;AAChB,aAAC,UAAU,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC,OAAO,CAAC,UAAA,MAAM,EAAI;AACnD,oBAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;AACjB,0BAAM,IAAI,KAAK,CAAI,MAAM,wBAAqB,CAAC;iBAClD;aACJ,CAAC,CAAC;;AAEH,gBAAM,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AAC3E,mBAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;SACrC;KACJ,CAAC,CAAC;;AAEH,QAAI,KAAK,GAAG,SAAR,KAAK,CAAY,SAAS,EAAE,SAAS,EAAE;AACvC,YAAI,OAAO,GAAG,SAAV,OAAO,CAAY,GAAG,EAAE,KAAK,EAAE;AAC/B,iBAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;SACtB,CAAC;;AAEF,YAAI,OAAO,GAAG,SAAV,OAAO,CAAY,GAAG,EAAE;AACxB,mBAAO,KAAK,CAAC,GAAG,CAAC,CAAC;SACrB,CAAC;;AAEF,YAAI,CAAC,SAAS,EAAE;AACZ,kBAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;SACrE;;AAED,eAAO,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;;AAEhC,YAAG,SAAS,EAAE;AACV,mBAAO,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;SAChC;;AAED,eAAO;AACH,wBAAY,EAAZ,YAAY;AACZ,qBAAS,EAAE,SAAS;AACpB,iBAAK,EAAE,aAAa;AACpB,iBAAK,EAAE,aAAa;AACpB,kBAAM,EAAE,cAAc;AACtB,kBAAM,EAAE,cAAc;AACtB,mBAAO,EAAE,eAAe;AACxB,mBAAO,EAAE,eAAe;AACxB,mBAAO,EAAP,OAAO;AACP,mBAAO,EAAP,OAAO;SACV,CAAC;KACL,CAAA;;AAED,WAAO,KAAK,CAAC;CAEd,CAAC,CAAE","file":"imgur.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('superagent-bluebird-promise')) :\n  typeof define === 'function' && define.amd ? define(['superagent-bluebird-promise'], factory) :\n  global.imgur = factory(global.request)\n}(this, function (request) { 'use strict';\n\n  var utils = {\n      API_URL: 'https://api.imgur.com',\n      API_VERSION: '3',\n      CLIENT_ID: '',\n      buildOptions: (apiUrl, path, method, body = {}) => {\n          return { apiUrl, path, method, body };\n      },\n      bearer: '',\n      additionalHeaders: {}\n  };\n\n  var imgurAPICall = function(options) {\n      ['method', 'apiUrl', 'path', 'body'].forEach(option => {\n          if (!options[option]) {\n              throw new Error(`${option} must be specified`);\n          }\n      });\n\n      let authToken = `Client-ID ${utils.CLIENT_ID}`;\n\n      if(utils.bearer) {\n          authToken = `Bearer ${utils.bearer}`;\n      }\n\n      return request[options.method](`${options.apiUrl}/${options.path}`)\n          .send(options.body)\n          .set('Authorization', authToken)\n          .set(utils.additionalHeaders)\n          .promise();\n  };\n\n  var endpoint = function(options) {\n      options.imgurAPICall = imgurAPICall.bind(options);\n      options.apiUrl = options.apiUrl || `${utils.API_URL}/${utils.API_VERSION}`;\n\n      return options;\n  }\n\n  var imageEndpoint = endpoint({\n      path: 'image',\n      apiUrl: `${utils.API_URL}/${utils.API_VERSION}`,\n      get(hash) {\n          const options = utils.buildOptions(this.apiUrl, `${this.path}/${hash}`, 'get');\n\n          return this.imgurAPICall(options);\n      }\n  });\n\n  var albumEndpoint = endpoint({\n      path: 'album',\n      apiUrl: `${utils.API_URL}/${utils.API_VERSION}`,\n      get(hash) {\n          const options = utils.buildOptions(this.apiUrl, `${this.path}/${hash}`, 'get');\n\n          return this.imgurAPICall(options);\n      }\n  });\n\n  var oauth2Endpoint = endpoint({\n      path: 'oauth2',\n      apiUrl: utils.API_URL,\n      get(responseType) {\n          const resType = responseType || 'token';\n          const queryString = '?' + [\n              `response_type=${resType}`,\n              `client_id=${utils.CLIENT_ID}`\n        ].join('&');\n\n          const path = `${this.path}/authorize${queryString}`;\n          const options = utils.buildOptions(this.apiUrl, path, 'get');\n\n          return this.imgurAPICall(options);\n      },\n      refresh(refreshToken, clientSecret) {\n          const queryString = '?' + [\n              `refresh_token=${refreshToken}`,\n              `client_id=${utils.CLIENT_ID}`,\n              `client_secret=${clientSecret}`,\n              'grant_type=refresh_token'\n          ].join('&');\n\n          const path = `${this.path}/token${queryString}`;\n          const options = utils.buildOptions(this.apiUrl, path, 'post');\n\n          return this.imgurAPICall(options);\n      }\n  });\n\n  var topicsEndpoint = endpoint({\n      path: 'topics',\n      apiUrl: `${utils.API_URL}/${utils.API_VERSION}`,\n      get(topicId, sort='viral', page=0) {\n          const requestPath = `${this.path}/${topicId}/${sort}/${page}`;\n          const options = utils.buildOptions(this.apiUrl, requestPath, 'get');\n\n          return this.imgurAPICall(options);\n      },\n      getDefaults() {\n          const requestPath = `${this.path}/defaults`;\n          const options = utils.buildOptions(this.apiUrl, requestPath, 'get');\n\n          return this.imgurAPICall(options);\n      }\n  });\n\n  const postOptions = {\n      path: 'gallery',\n      apiUrl: `${utils.API_URL}/${utils.API_VERSION}`\n};\n\n  function extend() {\n    var key, obj, result = {}, i;\n    for (i = 0; i <= arguments.length; i++) {\n      obj = arguments[i];\n      for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          result[key] = obj[key];\n        } else {\n        }\n      }\n    }\n    return result;\n  }\n\n  var galleryPostEndpoint = endpoint(extend({}, postOptions, {\n      REASON_DOES_NOT_BELONG_ON_IMGUR: 1,\n      get(hash) {\n          const path = `${this.path}/${hash}`;\n          const options = utils.buildOptions(this.apiUrl, path, 'get');\n\n          return this.imgurAPICall(options);\n      },\n      report(hash, reason = this.REASON_DOES_NOT_BELONG_ON_IMGUR) {\n          if(!hash) { throw new Error('hash must be specified'); }\n\n          if(typeof reason !== 'number') {\n              throw new Error('the reason must be an integer');\n          }\n\n          const path = `${this.path}/${hash}/report`;\n          const options = utils.buildOptions(this.apiUrl, path, 'post', { reason });\n\n          return this.imgurAPICall(options);\n      },\n      _handleVote(hash, voteType) {\n          if(!hash) { throw new Error('hash must be specified'); }\n\n          const path = `${this.path}/${hash}/vote/${voteType}`;\n          const options = utils.buildOptions(this.apiUrl, path, 'post');\n\n          return this.imgurAPICall(options);\n      },\n      upvote(hash) {\n          return this._handleVote(hash, 'up');\n      },\n      downvote(hash) {\n          return this._handleVote(hash, 'down');\n      },\n      favorite(hash, isAlbum) {\n          if(!hash) { throw new Error('hash must be specified'); }\n\n          if(isAlbum === undefined || typeof(isAlbum) !== 'boolean') {\n              throw new Error('isAlbum with type boolean must be specified');\n          }\n\n          const postType = isAlbum ? 'album' : 'image';\n          //doesn't use gallery path because it could be a non gallery item\n          const path = `${postType}/${hash}/favorite`;\n          const options =  utils.buildOptions(this.apiUrl, path, 'post');\n\n          return this.imgurAPICall(options);\n      },\n      comments: endpoint(extend({}, postOptions, {\n          get(hash, sort='best') {\n              const path = `${this.path}/${hash}/comments/${sort}`;\n              const options = utils.buildOptions(this.apiUrl, path, 'get');\n\n              return this.imgurAPICall(options);\n          }\n      }))\n  }));\n\n  var galleryEndpoint = endpoint({\n      path: 'gallery',\n      apiUrl: `${utils.API_URL}/${utils.API_VERSION}`,\n      get(section='hot', sort='viral', page=0, showViral=true) {\n          const requestPath = `${this.path}/${section}/${sort}/${page}?showViral=${showViral}`;\n          const options = utils.buildOptions(this.apiUrl, requestPath, 'get');\n\n          return this.imgurAPICall(options);\n      },\n      post: galleryPostEndpoint\n  });\n\n  var commentEndpoint = endpoint({\n      path: 'comment',\n      apiUrl: `${utils.API_URL}/${utils.API_VERSION}`,\n      REASON_DOES_NOT_BELONG_ON_IMGUR: 1,\n      get(commentId) {\n          if(!commentId) { throw new Error('commentId must be specified'); }\n\n          const path = `${this.path}/${commentId}`;\n          const options = utils.buildOptions(this.apiUrl, path, 'get');\n\n          return this.imgurAPICall(options);\n      },\n      downvote(commentId) {\n          if(!commentId) { throw new Error('commentId must be specified'); }\n\n          const path = `${this.path}/${commentId}/vote/down`;\n          const options = utils.buildOptions(this.apiUrl, path, 'post');\n\n          return this.imgurAPICall(options);\n      },\n      upvote(commentId) {\n          if(!commentId) { throw new Error('commentId must be specified'); }\n\n          const path = `${this.path}/${commentId}/vote/up`;\n          const options = utils.buildOptions(this.apiUrl, path, 'post');\n\n          return this.imgurAPICall(options);\n      },\n      report(commentId, reason = this.REASON_DOES_NOT_BELONG_ON_IMGUR) {\n          if(!commentId) { throw new Error('commentId must be specified'); }\n\n          if(typeof reason !== 'number') {\n              throw new Error('the reason must be an integer');\n          }\n\n          const path = `${this.path}/${commentId}/report`;\n          const options = utils.buildOptions(this.apiUrl, path, 'post', { reason });\n\n          return this.imgurAPICall(options);\n      },\n      deleteComment(commentId) {\n          if(!commentId) { throw new Error('commentId must be specified'); }\n\n          const path = `${this.path}/${commentId}`;\n          const options = utils.buildOptions(this.apiUrl, path, 'del');\n\n          return this.imgurAPICall(options);\n      },\n      submitComment(params) {\n          ['image_id', 'comment'].forEach(option => {\n              console.log(!params[option]);\n              if (!params[option]) {\n                  throw new Error(`${option} must be specified`);\n              }\n          });\n\n          const options = utils.buildOptions(this.apiUrl, this.path, 'post', params);\n          return this.imgurAPICall(options);\n      },\n      submitReply(params) {\n          ['image_id', 'comment', 'parent_id'].forEach(option => {\n              if (!params[option]) {\n                  throw new Error(`${option} must be specified`);\n              }\n          });\n\n          const options = utils.buildOptions(this.apiUrl, this.path, 'post', params);\n          return this.imgurAPICall(options);\n      }\n  });\n\n  var imgur = function(clientKey, bearerKey) {\n      let setUtil = function(key, value) {\n          utils[key] = value;\n      };\n\n      let getUtil = function(key) {\n          return utils[key];\n      };\n\n      if (!clientKey) {\n          throw new Error('Client Key required to initialize imgur client');\n      }\n\n      setUtil('CLIENT_ID', clientKey);\n\n      if(bearerKey) {\n          setUtil('bearer', bearerKey);\n      }\n\n      return {\n          imgurAPICall,\n          CLIENT_ID: clientKey,\n          image: imageEndpoint,\n          album: albumEndpoint,\n          oauth2: oauth2Endpoint,\n          topics: topicsEndpoint,\n          gallery: galleryEndpoint,\n          comment: commentEndpoint,\n          setUtil,\n          getUtil\n      };\n  }\n\n  return imgur;\n\n}));\n"],"sourceRoot":"/source/"}